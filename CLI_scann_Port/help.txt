Этот код представляет собой простую программу для сканирования портов
на заданном IP-адресе.
Он использует многопоточность для ускорения сканирования портов,
где каждый поток сканирует определенный диапазон портов.

Когда программа запускается, она ожидает передачи IP-адреса через аргумент
командной строки.
Если IP-адрес не указан или указано неверное количество аргументов, программа
выводит сообщение об использовании и завершается с кодом ошибки.

Затем программа создает несколько потоков, каждый из которых сканирует
свой диапазон портов на заданном IP-адресе.
Если порт открыт, программа выводит сообщение об этом.
После завершения сканирования всех портов, программа завершается.


Когда программа запускается, она использует библиотеку clap для создания
командной строки с помощью функционального стиля.
Она определяет аргумент командной строки IP_ADDRESS,
который требуется указать при запуске программы.
Этот аргумент представляет IP-адрес, который будет сканироваться.

Затем программа получает значение IP-адреса из аргументов командной строки
и преобразует его в тип IpAddr.

Далее программа создает потоки для выполнения сканирования портов.
Внутри цикла for она итерируется по всем портам от 1 до 65535.
Для каждого порта она формирует адрес цели в формате "IP:PORT".

После формирования адреса цели программа делает паузу в 1 секунду,
чтобы снизить нагрузку на целевую систему.
Затем она пытается установить соединение с целевым портом,
используя функцию TcpStream::connect_timeout().
Если соединение успешно установлено,
 то программа выводит сообщение "Port {порт} is open", указывая, что порт открыт.
 Если соединение не удалось установить, программа продолжает итерацию
 по следующим портам.Все потоки сканирования портов запускаются
 параллельно с помощью функции spawn().
 Затем главный поток программы ожидает
 завершения всех потоков с помощью функции join().
  Этот код демонстрирует пример реализации простого порт-сканера в Rust.
  Он итерируется по всем портам на заданном IP-адресе и проверяет,
  открыт ли каждый порт. Заметьте, что этот код
  выполняет только базовое сканирование портов и может
  быть расширен или оптимизирован в зависимости от ваших потребностей.